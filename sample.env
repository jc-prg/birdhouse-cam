#------------------------------------------------------------
# Sample configuration for birdhouse (RPi)
#------------------------------------------------------------
# create a copy of this file and edit for your environment
# $ cp sample.env .env
#------------------------------------------------------------

# Server names
BIRDHOUSE_SERVER_INT=your_internal_servername
BIRDHOUSE_SERVER_EXT=your_external_server_name

# App Forward
BIRDHOUSE_ID=1
BIRDHOUSE_APP_FORWARD=https://your_external_webpage/birdhouse/index.php

# Project directory and logging settings; log level: DEBUG, INFO, WARNING, ERROR (default is INFO)
BIRDHOUSE_DIR_PROJECT=/projects/prod/birdhouse-cam/
BIRDHOUSE_DIR_LOGGING=/projects/prod/birdhouse-cam/log/
BIRDHOUSE_LOG2FILE=YES
BIRDHOUSE_LOG_LEVEL=WARNING

# add modules to be shown in a different log level
# --------------------------------------------------------
#   root, backup, bu-dwnld, server, srv-info, srv-health,
#   statistics, config, config-Q,  DB-text, DB-json, DB-couch, DB-handler,
#   cam-main, cam-img, cam-pi, cam-ffmpg, cam-video, cam-out, cam-other, cam-object, cam-stream, cam-handl, cam-info,
#   video, video-srv, image, img-eval, mic-main, sensors, weather, weather-py, weather-om,
#   views, view-head, view-chart, view-fav, view-arch, view-obj
# --------------------------------------------------------
BIRDHOUSE_LOG_DEBUG=
BIRDHOUSE_LOG_INFO=
BIRDHOUSE_LOG_WARNING=
BIRDHOUSE_LOG_ERROR=

# Instance - TEST, PROD, ... - if "TEST", the headline will be displayed in RED
BIRDHOUSE_INSTANCE=PROD

# Installation type, options are: DOCKER, DIRECT, HYBRID
BIRDHOUSE_INSTALLATION_TYPE=DOCKER

# check video device satus
BIRDHOUSE_VIDEO_DEVICE_TEST=YES

# Configure the ports to access the birdhouse app
BIRDHOUSE_HTTP_SERVER=""
BIRDHOUSE_HTTP_PORT=8000
BIRDHOUSE_WEBDAV_PORT=8006
BIRDHOUSE_API_PORT=8007
BIRDHOUSE_VIDEO_PORT=8008

# Configure audio streaming; use 'arecord -l' to check available audio devices -> "<card-id>,<device-id>"
BIRDHOUSE_AUDIO_SERVER=${BIRDHOUSE_SERVER_INT}
BIRDHOUSE_AUDIO_PORT=8009
BIRDHOUSE_AUDIO_DEVICE="0,0"

# Database settings (options: couch, json, both), recommmended is "both"
DATABASE_TYPE=both
DATABASE_DAILY_CLEANUP=true
DATABASE_CACHE=true
DATABASE_CACHE_ARCHIVE=false

# CouchDB server and credentials
COUCHDB_SERVER=${BIRDHOUSE_SERVER_INT}
COUCHDB_PORT=5100
COUCHDB_USER=birdhouse
COUCHDB_PASSWORD=birdhouse

# access settings;
# - chose the way to give access to admin functionality: DENY, ALLOW, LOGIN
# - DENY: to deactivate admin access from the internet, add router / proxy IP to ADMIN_IP4_DENY
# - ALLOW: to allow admin access, add IP4 adresses that are allowed
# - LOGIN: set password, a login form will be available in the app via menu
ADMIN_LOGIN=DENY
ADMIN_IP4_DENY=["192.168.1.41"]
ADMIN_IP4_ALLOW=[]
ADMIN_PASSWORD=set_your_password

# Statistics, values: true, false
STATISTICS_THREADS=true

# WebDAV settings
WEBDAV_USER=birdhouse
WEBDAV_PWD=set_your_password

# Activate for object / bird detection with torch, requires OS with 64bit
OBJECT_DETECTION=OFF

# Raspberry incl. GPIO active (required to use sensors)
RPI_ACTIVE=true
RPI_64BIT=true

# Configuration for Raspberry / ARM Architecture, to use another one comment the following 3 lines
# ... for Object detection with PyTorch use "./config/container_rpi64"
CONTAINER_SERVER=./config/container_rpi
CONTAINER_VIDEO=./config/container_video_rpi
CONTAINER_AUDIO=./config/container_audio_rpi
IMAGE_DB=matthiasg/rpi-couchdb:latest
# IMAGE_DB=treehouses/rpi-couchdb                 # alternative docker image for rpi

# Configuration for AMD64 Architecture, to use this uncomment the following lines and comment the lines above
#CONTAINER_SERVER=./config/container
#CONTAINER_VIDEO=./config/container_video
#CONTAINER_AUDIO=./config/container_audio
#IMAGE_DB=apache/couchdb:latest

# Automatic docker container restart (possible values are: no, always, unless-stopped, on-failure)
RESTART_SERVER=always
RESTART_DB=on-failure
RESTART_APP=on-failure
RESTART_VIDEO=on-failure

# Memory for server container (check the resources of your system first; values are calculated for RPi3)
# -> see documentation to configure a swap memory, that might help in addition; reduce if docker container exits with code 137
# -> if there are data of more than about 10 months you might need to increase the default value for the CouchDB
#    and follow the instructions and setup a swap file on your RPi
MEMORY_MAX_SERVER=600M
MEMORY_MAX_COUCH=200M
MEMORY_MAX_STREAM=100M
MEMORY_MAX_APACHE=50M
